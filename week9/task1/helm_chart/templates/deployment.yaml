apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "project.name" . }}-deployment
  labels:
    app: {{ include "project.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "project.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "project.name" . }}
    spec:
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "project.name" . }}-sa
      containers:
        - name: {{ include "project.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          ports:
            - containerPort: {{ .Values.containerPort }}
          env:
            - name: DJANGO_ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "project.name" . }}-configmap
                  key: allowed-hosts
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "project.name" . }}-secret
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "project.name" . }}-secret
                  key: DB_PASSWORD
            - name: DB_HOST
              value: "terraform-20250702121708179900000007.c1i0i6eic6ni.eu-north-1.rds.amazonaws.com"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "project.name" . }}-secret
                  key: DB_NAME
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "project.name" . }}-secret
                  key: SECRET_KEY
            - name: DATABASE_URL
              value: "postgres://$(DB_USERNAME):$(DB_PASSWORD)@$(DB_HOST):5432/$(DB_NAME)"
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 3
            failureThreshold: 5
