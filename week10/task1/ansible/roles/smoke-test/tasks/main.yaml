---
- name: Wait for all Kubernetes nodes to be Ready
  kubernetes.core.k8s_info:
    kind: Node
    wait: yes
    wait_condition:
      type: Ready
      status: True
      reason: KubeletReady
    wait_timeout: 60
    wait_sleep: 5
  register: nodes_ready

- name: Create nginx deployment
  community.kubernetes.k8s:
    state: present
    namespace: default
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: nginx
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: nginx
        template:
          metadata:
            labels:
              app: nginx
          spec:
            containers:
              - name: nginx
                image: nginx:latest

- name: Wait until nginx pod is running
  community.kubernetes.k8s_info:
    kind: Pod
    label_selectors:
      - app=nginx
  register: nginx_pods
  until: nginx_pods.resources | length > 0 and nginx_pods.resources[0].status.phase == "Running"
  retries: 15
  delay: 10

- name: Set nginx pod name fact
  set_fact:
    pod_name: "{{ nginx_pods.resources[0].metadata.name }}"

- name: Retrieve nginx pod logs
  community.kubernetes.k8s_exec:
    pod: "{{ pod_name }}"
    namespace: default
    command:
      - cat
      - /var/log/nginx/access.log
  register: pod_logs
  failed_when: false

- name: Display nginx pod logs (if available)
  debug:
    msg: "{{ pod_logs.stdout | default('No logs found or unable to fetch logs.') }}"

- name: Get nginx version inside the pod
  community.kubernetes.k8s_exec:
    pod: "{{ pod_name }}"
    namespace: default
    command:
      - nginx
      - -v
  register: nginx_version
  failed_when: false

- name: Show nginx version output
  debug:
    msg: "{{ nginx_version.stderr | default('No version info available') }}"

- name: Expose nginx deployment via NodePort service
  community.kubernetes.k8s:
    state: present
    namespace: default
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: nginx
      spec:
        type: NodePort
        selector:
          app: nginx
        ports:
          - protocol: TCP
            port: 80
            targetPort: 80

- name: Get nginx service details
  community.kubernetes.k8s_info:
    kind: Service
    namespace: default
    name: nginx
  register: svc_info
  retries: 10
  delay: 3
  until: svc_info.resources | length > 0

- name: Set NodePort fact from service
  set_fact:
    node_port: "{{ svc_info.resources[0].spec.ports[0].nodePort }}"

- name: Verify nginx service accessibility on worker nodes
  ansible.builtin.uri:
    url: "http://{{ item }}:{{ node_port }}"
    method: HEAD
    return_content: no
    timeout: 5
  loop: "{{ groups['worker_nodes'] }}"
  register: curl_results
  ignore_errors: yes

- name: Show HTTP status code for nginx service on each node
  debug:
    msg: "Node {{ item.item }} responded with status code: {{ item.status | default('No response') }}"
  loop: "{{ curl_results.results }}"